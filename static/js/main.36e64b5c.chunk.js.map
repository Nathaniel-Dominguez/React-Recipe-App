{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/Recipe.js","components/Router.js","registerServiceWorker.js","index.js"],"names":["Form","props","onSubmit","getRecipe","style","marginBottom","className","type","name","Recipes","recipes","map","recipe","key","title","src","image_url","alt","length","substring","publisher","Link","to","pathname","recipe_id","state","require","config","API_KEY","process","App","e","a","recipeName","target","elements","value","preventDefault","fetch","api_call","json","data","setState","console","log","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","stringify","setItem","this","Component","Recipe","activeRecipe","location","req","res","href","publisher_url","React","Router","BrowserRouter","basename","Switch","Route","path","component","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.36e64b5c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = props => (\n\t<form onSubmit={props.getRecipe} style={{ marginBottom:'2rem' }}>\n\t\t<input className='form__input' type='text' name='recipeName'/>\n\t\t<button className='form__button'>Search</button>\n\t</form>\n);\n\n\n\nexport default Form;","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst Recipes = props => (\n\t<div className='container'>\n\t\t<div className='row'>\n\t\t{ props.recipes.map((recipe) => {\n        \treturn (\n\t\t\t\t<div key={recipe.title} className='col-md-4' style={{ marginBottom:'2rem' }}>\n\t\t\t\t\t<div className='recipes__box'>\n\t\t\t\t\t\t<img className='recipe__box-img' src={recipe.image_url} alt={recipe.title} />\n\t\t\t\t\t\t<div className='recipe__text'>\n\t\t\t\t\t\t\t<h5 className='recipes__title'>{ recipe.title.length < 20 ? `${recipe.title}` : `${recipe.title.substring(0, 25)}...` }</h5>\n\t\t\t\t\t\t\t<p className='recipes__subtitle'>Publusher: <span> { recipe.publisher } </span></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className='recipe_buttons'><Link to={{ \n\t\t\t\t\t\t\tpathname: `/recipe/${recipe.recipe_id}`,\n\t\t\t\t\t\t\tstate: { recipe: recipe.title } \n\t\t\t\t\t\t}}>View Recipe</Link></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        \t);\n        }) }\t\t\t\n\t\t</div>\n\t</div>\n);\n\nexport default Recipes","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Form from \"./components/Form\";\nimport Recipes from \"./components/Recipes\"\nrequire(\"dotenv\").config();\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n\tstate = {\n\t\trecipes: []\n\t}\n\tgetRecipe = async (e) => {\n\t\tconst recipeName = e.target.elements.recipeName.value;\n  \t\te.preventDefault();\n  \t\tconst api_call = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${recipeName}&count=10`);\n\n  \t\tconst data = await api_call.json();\n  \t\tthis.setState({ recipes: data.recipes });\n  \t\tconsole.log(this.state.recipes)\n  }\n  componentDidMount = () => {\n  \tconst json = localStorage.getItem(\"recipes\");\n  \tconst recipes = JSON.parse(json);\n    if (localStorage.getItem(\"recipes\") !== null)\n  \tthis.setState({ recipes: recipes });\n  }\n  componentDidUpdate = () => {\n  \tconst recipes = JSON.stringify(this.state.recipes);\n  \tlocalStorage.setItem(\"recipes\", recipes);\n  }\n  \trender() {\n    \treturn (\n      \t<div className=\"App\">\n        \t<header className=\"App-header\">\n        \t  <h1 className=\"App-title\">Recipe Search</h1>\n        \t</header>\n        \t<Form getRecipe={this.getRecipe} />\n        \t<Recipes recipes={this.state.recipes} />\n      \t</div>\n    \t);\n  \t}\n}\n\nexport default App;","import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nclass Recipe extends React.Component {\n\tstate = {\n\t\tactiveRecipe: []\n\t}\n\tcomponentDidMount = async () => {\n\t\tconst title = this.props.location.state.recipe;\n  \t\tconst req = await fetch(`https://www.food2fork.com/api/search?key=${API_KEY}&q=${title}`);\n\n  \t\tconst res = await req.json();\n  \t\tthis.setState({ activeRecipe: res.recipes[0] });\n  \t\tconsole.log(this.state.activeRecipe);\n\t}\n\trender() {\n\t\tconst recipe = this.state.activeRecipe;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{ this.state.activeRecipe.length !== 0 &&\n\t\t\t\t\t<div className=\"active-recipe\">\n\t\t\t\t\t\t<img className=\"active-recipe__img\" src={recipe.image_url} alt={recipe.title}/>\n\t\t\t\t\t\t<h3 className=\"active-recipe__title\">{ recipe.title }</h3>\n\t\t\t\t\t\t<h4 className=\"active-recipe__publisher\">\n\t\t\t\t\t\t\tPublisher: <span>{ recipe.publisher }</span>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p className=\"active-recipe__website\">Website: <span><a href={recipe.publisher_url}>{recipe.publisher_url}</a></span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<button className=\"active-recipe__button\">\n\t\t\t\t\t\t\t<Link to=\"/\">Go Home</Link>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\t\n\t\t);\n\t}\n};\n\nexport default Recipe;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport App from '../App';\nimport Recipe from './Recipe';\n\nconst Router = () => (\n\t<BrowserRouter basename='/'>\n\t\t<Switch>\n\t\t\t<Route path='/' component={App} exact />\n\t\t\t<Route path='/recipe/:id' component={Recipe} />\n\t\t</Switch>\n\t</BrowserRouter>\n);\n\nexport default Router;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Router from './components/Router';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}